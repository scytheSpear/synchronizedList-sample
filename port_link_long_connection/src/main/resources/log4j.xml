<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">

<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

    <!-- Log4j最主要的三大基本构件： -->
    <!-- 1．Appenders（定义了log信息输出的设备，log信息应该被输出到什么地方，控制台、文件（数据库）、网络设备等） -->
    <!-- 2．Layouts（对log信息进行格式化） -->
    <!-- 3．Categories（对log信息进行分类筛选，通俗的讲就是什么信息应该被输出，什么log信息应该被忽略） -->
    <!-- 控制台 -->
    <!-- System.err -->
    <appender
            name="CONSOLE.ERR"
            class="org.apache.log4j.ConsoleAppender">
        <param
                name="target"
                value="System.err" />
        <layout class="org.apache.log4j.PatternLayout">
            <param
                    name="ConversionPattern"
                    value="%d %-5p %l - %m%n" />
        </layout>
        <filter class="org.apache.log4j.varia.LevelRangeFilter">
            <param
                    name="LevelMin"
                    value="warn" />
            <param
                    name="LevelMax"
                    value="fatal" />
            <param
                    name="AcceptOnMatch"
                    value="false" />
        </filter>
    </appender>
    <!-- System.out -->
    <!-- The default pattern: Date Priority [Category] Message\n -->
    <!-- %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL -->
    <!-- %r 输出自应用启动到输出该log信息耗费的毫秒数 -->
    <!-- %c 输出所属的类目，通常就是所在类的全名 -->
    <!-- %t 输出产生该日志事件的线程名 -->
    <!-- %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n” -->
    <!-- %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921 -->
    <!-- %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10) -->
    <appender
            name="CONSOLE.OUT"
            class="org.apache.log4j.ConsoleAppender">
        <param
                name="target"
                value="System.out" />
        <layout class="org.apache.log4j.PatternLayout">
            <param
                    name="ConversionPattern"
                    value="%d %-5p %l - %m%n" />
        </layout>
        <filter class="org.apache.log4j.varia.LevelRangeFilter">
            <param
                    name="LevelMin"
                    value="info" />
            <param
                    name="LevelMax"
                    value="info" />
            <param
                    name="AcceptOnMatch"
                    value="false" />
        </filter>
    </appender>


<appender name="myFile" class="org.apache.log4j.RollingFileAppender">
    <param name="file" value="test.log"></param>
    <param name="Append" value="true" />
    <param name="MaxBackupIndex" value="10" />
    <layout class="org.apache.log4j.PatternLayout">
        <param name="ConversionPattern" value="%p (%c:%L)- %m%n" />
    </layout>
</appender>


        <!-- 对指定的包设定日志级别，主要目的是减少不必要的日志 -->
    <logger name="com.itsys.portLink.socket"
            additivity="true">
        <level value="info"></level>
        <appender-ref ref="myFile"></appender-ref>
    </logger>
    <root>
        <!-- TRACE < DEBUG < INFO < WARN < ERROR < FATAL -->
        <priority value="WARN" />
        <!-- 在生产环境下，可以把下行输出到控制台的代码注释掉 -->
        <appender-ref ref="CONSOLE.ERR" />
        <appender-ref ref="CONSOLE.OUT" />

    </root>

</log4j:configuration>